/**
 * add by liyamiao
 * @param north 查询条件divID
 * @param center 表格内容divID
 * @param toolbar toolbarID
 */
function expand(north,center,toolbar){
	$("#"+toolbar).html('<table style="float:right;cellspacing: 0px; cellpadding: 0px;"><tr><td><a id="expand" style="cursor: pointer" title="收起查询面板"> <img id="accordImg" style="width: 19px;" src="'+ctx+'/images/accordion_up.png" /> </a></td></tr></table>'+$("#"+toolbar).html());
	var tablePanelTop = $("#" + north).height();
	$("#expand").toggle(function(){ 
        $("#" + north).hide(); 
        $("#accordImg").attr("src",ctx+"/images/accordion_down.png");       
        $("#expand").attr("title","展开查询面板");       
        $("#" + center).parent().css("top","0px");        
        $("#" + center).css("height",$("#" + center).height() +tablePanelTop + "px"); 
        $("#" + center).find(".datagrid-wrap").css("height",$("#" + center).find(".datagrid-wrap").height() + tablePanelTop + "px");
        $("#" + center).find(".datagrid-view").css("height",$("#" + center).find(".datagrid-view").height() + tablePanelTop + "px");
        $("#" + center).find(".datagrid-body").css("height",$("#" + center).find(".datagrid-body").height() + tablePanelTop + "px");
  },function(){
        $("#" + north).show();
        $("#expand").attr("title","收起查询面板");  
        $("#accordImg").attr("src",ctx+"/images/accordion_up.png");   
        $("#" + center).parent().css("top",tablePanelTop + "px");           
        $("#" + center).css("height",$("#" + center).height() - tablePanelTop + "px");
        $("#" + center).find(".datagrid-wrap").css("height",$("#" + center).find(".datagrid-wrap").height() - tablePanelTop + "px");
        $("#" + center).find(".datagrid-view").css("height",$("#" + center).find(".datagrid-view").height() - tablePanelTop + "px");
        $("#" + center).find(".datagrid-body").css("height",$("#" + center).find(".datagrid-body").height() - tablePanelTop + "px");
        
  });
	

	//处理窗口改变上移查询条件页面自适应问题 
	$(window).resizeEnd(function(){	  
		   if($("#expand").attr("title")=="展开查询面板"){
		     var top=$("#" + north).height();
		        $("#" + center).parent().css("top","0px");     
		        $("#" + center).css("height",$("#" + center).height() +top + "px"); 
		        $("#" + center).find(".datagrid-wrap").css("height",$("#" + center).find(".datagrid-wrap").height() + top + "px");
		        $("#" + center).find(".datagrid-view").css("height",$("#" + center).find(".datagrid-view").height() + top + "px");
		        $("#" + center).find(".datagrid-body").css("height",$("#" + center).find(".datagrid-body").height() + top + "px");
	  }
	});
}


//解决缩放后处理事件
//Generated by CoffeeScript 1.6.3
(function($, window, document) {
  var ResizeEnd, defaults, plugin;
  plugin = 'resizeEnd';
  defaults = {
    delay: 250
  };
  ResizeEnd = function(element, options, callback) {
    if (typeof options === 'function') {
      callback = options;
      options = {};
    }
    callback = callback || null;
    this.element = element;
    this.settings = $.extend({}, defaults, options);
    this._defaults = defaults;
    this._name = plugin;
    this._timeout = false;
    this._callback = callback;
    return this.init();
  };
  ResizeEnd.prototype = {
    init: function() {
      var $el, _this;
      _this = this;
      $el = $(this.element);
      return $el.on('resize', function() {
        return _this.initResize();
      });
    },
    getUTCDate: function(d) {
      var curdate;
      d = d || new Date();
      curdate = Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());
      return curdate;
    },
    initResize: function() {
      var _this;
      _this = this;
      _this.controlTime = _this.getUTCDate();
      if (_this._timeout === false) {
        _this._timeout = true;
        return setTimeout(function() {
          return _this.runCallback(_this);
        }, _this.settings.delay);
      }
    },
    runCallback: function(_this) {
      var nowTime;
      nowTime = _this.getUTCDate();
      if (nowTime - _this.controlTime < _this.settings.delay) {
        return setTimeout(function() {
          return _this.runCallback(_this);
        }, _this.settings.delay);
      } else {
        _this._timeout = false;
        return _this._callback();
      }
    }
  };
  return $.fn[plugin] = function(options, callback) {
    return this.each(function() {
      if (!$.data(this, 'plugin_' + plugin)) {
        return $.data(this, 'plugin_' + plugin, new ResizeEnd(this, options, callback));
      }
    });
  };
})(jQuery, window, document);
